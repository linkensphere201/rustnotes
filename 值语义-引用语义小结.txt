浅拷贝
---------
1. Box<T>无法实现Copy.

2. Copy trait是一个标记，对于实现了Copy的类型，在「赋值（绑定）、函数传参、闭包捕获、函数返回值」等case时，rust编译器会自动进行按位复制（浅拷贝）.

3. 哪些类型无法实现Copy？
	- 实现了Drop的类型
	- 引用语义的类型，如Box<T>

3.1 rust为某些基本类型实现了Copy。
	- 如: u32, i32等POD类型。
	- 如:

3.2 无法实现Copy的类型，可以实现Clone，定制化复制行为（如深拷贝 or 浅拷贝），并且在需要拷贝的时候，显式调用clone(). 

4. 如何实现Copy：
  1. 先实现Clone
  2. 再实现Copy（一个空trait）

5. 值语义和引用语义的区分：
  1. 实现了Copy，就是值语义，在「赋值（绑定）、函数传参、闭包捕获、函数返回值」时，编译器直接隐式调用Copy，再也不会移动.
  2. 没有实现Copy，就是引用语义，在「赋值（绑定）、函数传参、闭包捕获、函数返回值」时，编译器会移动对象.